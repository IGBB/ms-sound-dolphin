#+TITLE: Population Structure
#+PROPERTY:  header-args :var DIR=(my/dir)

* Structure
** Homoplasmic Bottlenose Dolphins
1) Convert vcf to ped file

   Convert vcf to ped using vcftools since vcf -> ped -> geno is more reliable
   than the vcf2geno converter provided by LEA or some submodule. Remove any
   non-variant sites (min allele freq. > 0)

   #+name: convert-vcf
   #+header: :var vcf="../3-snps/filtered.vcf"
   #+header: :var out="1-fltr-set/samples"
   #+begin_src sh :tangle 1-fltr-set/convert.sh
ROOT=$(git rev-parse --show-toplevel)

ml singularity
vcftools () {
    singularity exec -B$ROOT \
        /apps/singularity-3/vcftools/vcftools-v0.1.16-1-deb_cv1.sif \
        vcftools $@
}


cut -f 1 $ROOT/0-ref/mito.amplicon.fa.fai |
    awk '{print $1, NR}' OFS="\t" FS="\t"  > $DIR/chr-map.amplicons

vcftools \
    --vcf $DIR/$vcf \
    --maf 0.002 \
    --plink \
    --chrom-map $DIR/chr-map.amplicons \
    --out $DIR/$out
   #+end_src

   #+RESULTS: convert-vcf
2) Run LEA
   #+NAME: run-lea
   #+header: :var prefix="1-fltr-set/samples"
   #+begin_src R :tangle 1-fltr-set/run-lea.R
library(LEA)

prefix <- scan(text=prefix, what="character", allowEscapes = T)
ped.file  <- paste0(prefix, '.ped')
geno.file <- paste0(prefix, '.geno')


ped2geno(ped.file, geno.file)

snmf(geno.file,
     K = 1:20,
     entropy = T,
     repetitions = 10,
     project = "new",
     ploidy=2,
     CPU = 24)

   #+end_src

3) Cross-Entropy
   #+name: graph-entropy
   #+header: :var project.dir="1-fltr-set/samples.snmfProject"
   #+header: :results output graphics file :file 1-fltr-entropy.png
   #+begin_src R :width 10 :height 4 :units in :res 100 :bg white :session fltr-set
library(tidyverse)
library(LEA)

project.dir <- scan(text=project.dir, what="character", allowEscapes = T)
#Load snmf project
project = load.snmfProject(project.dir)

# Get best Ks by finding minimum min, mean, and max cross entropy
summary.info = summary(project)$crossEntropy

# Plot the mean cross entropy.
# Get the mean from summary_info and convert the rownames to column "K".
# Remove "K = " from the K column.
# Rename the "summary_info[2, ]" column to "mean".
# Pass this information to ggplot.
# Add a horizontal red line at the minimum cross entropy.
# Plot the cross entropy by K as a scatterplot.
# Set the x-axis labels from 1-10.
# Change the x-axis and y-axis labels and the title.
# Remove the legend.
as.data.frame(t(summary.info)) %>%
  tibble::rownames_to_column("K") %>%
  mutate(K = factor(as.numeric(substring(K, 4)))) %>%
  ggplot() +
  geom_hline(aes(yintercept = min(summary.info[2,]), color = "red")) +
  geom_pointrange(aes(x = K, ymin=min, y = mean, ymax=max)) +
  labs(title = "Cross-entropy versus K", x = "Number of ancestral populations (K)", y = "Cross-entropy") +
  theme_minimal() +
  theme(legend.position = "none",
        panel.grid.major.x=element_blank(),
        panel.grid.minor.x=element_blank())
  #+end_src

4) Best run per K
   #+begin_src R :session fltr-set :colnames yes
lapply(1:20, cross.entropy, object=project) %>%
  sapply(which.min) %>%
  as.data.frame(nm="run") %>%
  rowid_to_column("K") %>%
  mutate(cross.entropy = mapply(cross.entropy, K=K, run=run,
                                MoreArgs = list(object=project)))
   #+end_src

   #+RESULTS:
   |  K | run |      cross.entropy |
   |----+-----+--------------------|
   |  1 |  10 |   0.04930118003847 |
   |  2 |  10 | 0.0389269602345973 |
   |  3 |  10 |  0.035152542291835 |
   |  4 |  10 | 0.0341674282774695 |
   |  5 |  10 | 0.0315477370050029 |
   |  6 |  10 | 0.0303271807646743 |
   |  7 |  10 |  0.030624363310139 |
   |  8 |  10 | 0.0316211441302755 |
   |  9 |  10 | 0.0302822237099896 |
   | 10 |  10 | 0.0308147915503753 |
   | 11 |  10 | 0.0312383993609064 |
   | 12 |  10 | 0.0289664439051259 |
   | 13 |  10 |  0.028863328448409 |
   | 14 |  10 | 0.0302019500426097 |
   | 15 |  10 | 0.0278979316188903 |
   | 16 |  10 | 0.0291448550386992 |
   | 17 |  10 | 0.0275972486547042 |
   | 18 |  10 | 0.0284868432226172 |
   | 19 |  10 | 0.0277001404080561 |
   | 20 |  10 |  0.029122209985577 |
5) Membership

   - Assign samples to populations.

     #+name: assign
     #+header: :var name.file = "1-fltr-set/samples.names"
     #+header: :var q.file="1-fltr-set/K6r10.Q"
     #+header: :results output file :file "1-fltr.K6r10.membership"
     #+begin_src R :colnames nil
library(data.table)
library(tidyverse)


ped.file <- scan(text=name.file, what="character", allowEscapes = T)
q.file   <- scan(text=q.file,   what="character", allowEscapes = T)

sample.names <- fread(name.file,
                      select = 1,
                      header=F,
                      stringsAsFactors=F,
                      col.names=c("sample"))

raw.data <- read.table(q.file)

data <- data.frame(sample=sample.names,
                   population = apply(raw.data, 1, which.max),
                   percent = apply(raw.data, 1, max))

data

     #+end_src

     #+RESULTS: assign
     [[file:1-fltr.K6r10.membership]]

   - Graph

     #+name: graph-struct
     #+header: :var q.file="1-fltr-set/K6r10.Q"
     #+header: :results output graphics file :file 1-fltr-K6r10.new.png
     #+begin_src R :width 12 :height 4 :units in :res 600 :bg white :session fltr-set

library(tidyverse)
library(hues)

#q.file   <- scan(text=q.file,   what="character", allowEscapes = T)
#raw.data <- read.table(q.file)

raw.data <- as.data.frame(Q(project, K=6, run=10))

# Order populaitons by size
population.order <- apply(raw.data, 1, which.max) %>%
  factor %>%
  fct_infreq %>%
  levels %>%
  as.numeric

## Rename populations
population.labels <- seq(1, length(population.order))
raw.data <- setNames(raw.data[,population.order], paste0("V", population.labels))

data.order <- dist(raw.data) %>%
    hclust(method="ave") %>%
    as.dendrogram %>%
    order.dendrogram

raw.data$population = apply(raw.data, 1, which.max)

ordered.data <- raw.data[data.order, ] %>%
  group_by(population) %>%
  mutate(sample = row_number()) %>%
  gather(starts_with("V"), key="cluster", value="percent")

population.size <- ordered.data %>%
   group_by(population) %>%
   summarise(label = sprintf("%d samples", max(sample))) %>%
  pull(label, name=population)

ggplot(ordered.data, aes(y = percent, x =sample, fill=cluster)) +
    geom_col(width = 1) +
    labs(title = paste0("Membership in ", length(unique(ordered.data$cluster)), " Inferred Populations"),
         y = "Membership",
         x = "Sample",
         fill = "Population") +
    scale_fill_iwanthue(cmin=30, cmax=80, lmin=35, lmax=80, labels=population.labels) +
    scale_y_continuous(labels=scales::percent, expand = c(0,0)) +
    scale_x_continuous(expand = c(0,0)) +
    facet_grid(cols=vars(population), space='free_x', scales='free_x',
               labeller = labeller(population=population.size), switch='x') +
    theme_minimal() +
    theme(axis.text.y=element_blank(),
          legend.position =  c(0.5, 1.04),
          axis.text.x=element_blank(),
          axis.title.x = element_blank()) +
    guides(fill=guide_legend(nrow=1, direction = 'horizontal'))

     #+end_src

     #+RESULTS: graph-struct
     [[file:1-fltr-K6r10.new.png]]

   - Members in outgroup
     #+begin_src R :session fltr-set :colnames yes

data.table::fread("1-fltr-set/samples.names",
                  select = 1,
                  header=F,
                  stringsAsFactors=F,
                  col.names=c("sample")) %>%
  cbind(raw.data) %>%
  filter(V6 >= 0.20)
     #+end_src

     #+RESULTS:
     | sample      |        V1 |         V2 |        V3 |        V4 |        V5 |       V6 | population |
     |-------------+-----------+------------+-----------+-----------+-----------+----------+------------|
     | SER11-0141  |  0.161934 |  0.0127567 |  0.101455 |  0.040166 | 0.0667315 | 0.616956 |          6 |
     | SER19-00351 |   0.53138 | 9.9991e-05 | 0.0294525 | 0.0665891 | 0.0834073 | 0.289071 |          1 |
     | SER19-00888 | 9.996e-05 |  9.996e-05 | 9.996e-05 | 9.996e-05 | 9.996e-05 |   0.9995 |          6 |

** GOMx Dolphins
1) Convert vcf to ped file

   Remove the three samples the appear to be distant

   #+name: convert-vcf
   #+header: :var vcf="../3-snps/filtered.vcf"
   #+header: :var out="2-gomx/samples"
   #+begin_src shell :tangle 2-gomx/convert.sh
ROOT=$(git rev-parse --show-toplevel)
DIR=$ROOT/6-structure

ml singularity
vcftools () {
    singularity exec -B$ROOT \
        /apps/singularity-3/vcftools/vcftools-v0.1.16-1-deb_cv1.sif \
        vcftools $@
}


cut -f 1 $ROOT/0-ref/mito.amplicon.fa.fai |
    awk '{print $1, NR}' OFS="\t" FS="\t"  > $DIR/chr-map.amplicons

vcftools \
    --vcf $DIR/$vcf \
    --remove-indv SER19-00888 \
    --remove-indv SER11-0141 \
    --remove-indv SER19-00351 \
    --maf 0.002 \
    --plink \
    --chrom-map $DIR/chr-map.amplicons \
    --out $DIR/$out
   #+end_src

   #+RESULTS: convert-vcf
2) Run LEA
   #+begin_src R  :session gomx :results none
library(LEA)

prefix<-"2-gomx/samples"
ped.file  <- paste0(prefix, '.ped')
geno.file <- paste0(prefix, '.geno')

ped2geno(ped.file, geno.file)

project <- snmf(geno.file,
     K = 1:20,
     entropy = T,
     repetitions = 10,
     project = "new",
     ploidy=2,
     CPU = 4)

   #+end_src

   #+RESULTS:
   : 2-gomx/samples.geno

   #+RESULTS: run-lea
3) Cross-Entropy
   #+header: :results output graphics file :file 2-gomx-entropy.new.png
   #+begin_src R :width 10 :height 4 :units in :res 600 :bg white :session gomx
library(tidyverse)

summary(project)$crossEntropy %>%
    t %>%
    as.data.frame %>%
    rownames_to_column("K") %>%
    mutate(K = factor(as.numeric(substring(K, 4)))) %>%
    ggplot() +
    geom_hline(aes(yintercept = min(summary.info[2,]), color = "red")) +
    geom_pointrange(aes(x = K, ymin=min, y = mean, ymax=max)) +
    labs(title = "Cross-entropy versus K", x = "Number of ancestral populations (K)", y = "Cross-entropy") +
    theme_minimal() +
    theme(legend.position = "none",
          panel.grid.major.x=element_blank(),
          panel.grid.minor.x=element_blank())


  #+end_src

  #+RESULTS:
  [[file:2-gomx-entropy.new.png]]

  [[./2-gomx-entropy.new.png]]

4) Best run per K
   #+begin_src R :session gomx :colnames yes
lapply(1:20, cross.entropy, object=project) %>%
  sapply(which.min) %>%
  as.data.frame(nm="run") %>%
  rowid_to_column("K") %>%
  mutate(cross.entropy = mapply(cross.entropy, K=K, run=run,
                                MoreArgs = list(object=project)))
   #+end_src

   #+RESULTS:
   |  K | run |      cross.entropy |
   |----+-----+--------------------|
   |  1 |   8 | 0.0556602736940106 |
   |  2 |   8 | 0.0438819614523363 |
   |  3 |   8 |  0.042203122654028 |
   |  4 |   8 | 0.0365632856305401 |
   |  5 |   8 | 0.0345007130211114 |
   |  6 |   8 | 0.0353510094032289 |
   |  7 |   8 |  0.034556585266595 |
   |  8 |   8 | 0.0317004971926726 |
   |  9 |   8 | 0.0348845201400839 |
   | 10 |   8 | 0.0311302854545264 |
   | 11 |   8 | 0.0327353919517104 |
   | 12 |   8 |  0.030979495017655 |
   | 13 |   4 | 0.0304945677950113 |
   | 14 |   8 | 0.0308494873749681 |
   | 15 |   8 | 0.0294214530402739 |
   | 16 |   8 | 0.0317402788757782 |
   | 17 |   8 | 0.0301836087435876 |
   | 18 |   8 | 0.0295594141370382 |
   | 19 |   8 | 0.0299397835912924 |
   | 20 |   8 | 0.0280187015099222 |

5) Membership

   - Graph

     #+header: :results output graphics file :file 2-gomx-K5r8.new.png
     #+begin_src R :width 12 :height 4 :units in :res 600 :bg white :session gomx

library(tidyverse)
library(hues)

raw.data <- as.data.frame(Q(project, K=5, run=8))

                                        # Order populaitons by size
population.order <- apply(raw.data, 1, which.max) %>%
  factor %>%
  fct_infreq %>%
  levels %>%
  as.numeric

## Rename populations
population.labels <- seq(1, ncol(raw.data))
raw.data <- setNames(raw.data[,population.order], paste0("V", population.labels))

data.order <- dist(raw.data) %>%
  hclust(method="ave") %>%
  as.dendrogram %>%
  order.dendrogram

raw.data <- cbind(raw.data,
                  population = apply(raw.data, 1, which.max),
                  percent = apply(raw.data, 1, which.max))

ordered.data <- raw.data[data.order, ] %>%
  group_by(population) %>%
  mutate(sample = row_number()) %>%
  gather(starts_with("V"), key="cluster", value="percent")

population.size <- ordered.data %>%
  group_by(population) %>%
  summarise(label = sprintf("%d samples", max(sample))) %>%
  pull(label, name=population)

ggplot(ordered.data, aes(y = percent, x =sample, fill=cluster)) +
  geom_col(width = 1) +
  labs(title = paste0("Membership in ", length(unique(ordered.data$cluster)), " Inferred Populations"),
       y = "Membership",
       x = "Sample",
       fill = "Population") +
  scale_fill_iwanthue(cmin=30, cmax=80, lmin=35, lmax=80, labels=population.labels) +
  scale_y_continuous(labels=scales::percent, expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  facet_grid(cols=vars(population), space='free_x', scales='free_x',
             labeller = labeller(population=population.size), switch='x') +
  theme_minimal() +
  theme(axis.text.y=element_blank(),
        legend.position =  c(0.5, 1.05),
        axis.text.x=element_blank(),
        axis.title.x = element_blank()) +
  guides(fill=guide_legend(nrow=1, direction = 'horizontal'))
     #+end_src

     #+RESULTS:
     [[file:2-gomx-K5r8.new.png]]

   - Assign samples to population

     #+header: :results output file :file "2-gomx.K5r8.membership"
     #+begin_src R :colnames nil :session gomx
sample.membership <- data.table::fread("2-gomx/samples.names",
                  select = 1,
                  header=F,
                  stringsAsFactors=F,
                  col.names=c("sample")) %>%
  cbind(raw.data) %>%
  select(sample, population, percent) %>%
  as.data.frame
sample.membership
     #+end_src

     #+RESULTS:
     [[file:2-gomx.K5r8.membership]]
6) Map (Not Used)
   #+name: map-membership
   #+header: :var q.file="2-gomx/K5r7.Q"
   #+header: :var ped.file = "2-gomx/samples.ped"
   #+header: :results output graphics file :file 2-gomx-K5r7-map.png
   #+begin_src R :width 8.5 :height 4 :units in :res 600 :bg white :session 2-gomx
library(data.table)
library(tidyverse)
library(maps)
library(hues)

q.file <- '2-gomx/K5r7.Q'
ped.file <- '2-gomx/samples.ped'

q.file   <- scan(text=q.file,   what="character", allowEscapes = T)
ped.file <- scan(text=ped.file, what="character", allowEscapes = T)

sample.names <- fread(ped.file,
                      select = 1,
                      header=F,
                      stringsAsFactors=F,
                      col.names=c("sample"))

sample.data <- fread("../2-samples/biosamples.tsv")  %>%
  separate(lat_lon, into=c('lat', 'lon', NA), sep="[NW]") %>%
  mutate(lat = as.numeric(lat),
         lon=as.numeric(lon) * -1)

raw.data <- read.table(q.file)
raw.data$population = apply(raw.data, 1, which.max)
raw.data$pop.percent = apply(raw.data, 1, max)
raw.data$sample <- sample.names$sample

data <- merge(raw.data, sample.data, by.x='sample', by.y='sample_name')

bound.lat <- c(min(data$lat, na.rm=T), max(data$lat, na.rm=T))
bound.lon <- c(min(data$lon, na.rm=T), max(data$lon, na.rm=T))

usa <- map_data("state", region=c("mississippi",
                                   "alabama",
                                   "louisiana",
                                   "florida"))

outline <- map_data('usa', region='main')
distance <- geosphere::dist2Line(cbind(data$lon, data$lat), cbind(usa$long, usa$lat))
data$barrier <- ifelse(distance[,'distance'] > 5000, 'Offshore', 'Mainland')

write.table(file = "barrier.lst", select(data, sample, barrier), sep = '\t', row.names = F, quote = F)

lapply(split(data$barrier, data$population), table) %>% bind_rows %>% head

ggplot(data)+
    geom_polygon(aes(long, lat, fill=region), usa, alpha=0.5) +
    ## geom_scatterpie(aes(lon,lat, color=factor(population), group=sample),
    ##                 data %>% filter(population == 4),
    ##                 cols=paste0("V", 1:6) , size=0.5)+
    geom_point(aes(lon, lat, color=factor(population), shape=barrier), alpha=0.7, size=1) +
    stat_ellipse(aes(lon, lat, color=factor(population), group=population), type="euclid", level=0.02) +
  scale_fill_iwanthue(cmin=30, cmax=80, lmin=0, lmax=50) +
  scale_color_iwanthue(cmin=30, cmax=80, lmin=35, lmax=80) +
    coord_quickmap(xlim= bound.lon, ylim=bound.lat) +
    facet_wrap("population", ncol=1) +
    theme_minimal() +
  theme(legend.position = 'none',
        axis.title=element_blank())

   #+end_src

   #+RESULTS: map-membership
   [[file:2-gomx-K5r7-map.png]]
7) ArcMap
     #+begin_src bash
convert \
\( ArcGIS/All_Pop.tif -trim -shave 1x1 \
    \( -background transparent -fill black -pointsize 36 \
             -size 1800x1800 -gravity center label:A \
             -trim +repage -bordercolor none -border 10x10 \) \
          -gravity northeast -composite \) \
\( ArcGIS/Pop?.tif -trim -shave 1x1 -append \
    \( -background transparent -fill black -pointsize 36 \
             -size 1800x1800 -gravity center label:B \
             -trim +repage -bordercolor none -border 10x10 \) \
          -gravity northeast -composite \) \
   -bordercolor black -border 1 -append 2-gomx-K5r8-arcmap-fig.png
 #+end_src

 #+RESULTS:

#+RESULTS:
